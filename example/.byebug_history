c
cc
c
]c
c
exit
Process.euid
Process.waitpid(server)
pid = Process.detach(server)
exit
red[:counter_store]
red.dispatch(type: :increment)
red[:counter_store]
puts red[:counter_store]
red.dispatch(type: :increment)
puts red[:counter_store]
red = DRbObject.new_with_uri(SERVER_URI)
exit
red.list
red = DRbObject.new_with_uri(SERVER_URI)
red.list
red = DRbObject.new_with_uri(SERVER_URI)
red.list
p red.list
red.list
red
red.dispatch(type: :increment)
red
red = DRbObject.new_with_uri(SERVER_URI)
exit
red.dispatch(type: :increment)
red = DRbObject.new_with_uri(SERVER_URI)
exit
red.dispatch('')
red.dispatch()
red
red = DRbObject.new_with_uri(SERVER_URI)
exit
red.dispatch(type: :increment)
end
  red.dispatch(type: :increment)
10.times do
red = DRbObject.new_with_uri(SERVER_URI)
exit
red.dispatch(type: :increment)
red
exit
red.dispatch(type: :increment)
c
exit
red.dispatch(type: :increment)
exit
red.stores
red.to_a
red[:counter_store]
red.
exit
red[:counter_store]
red.dispatch(type: :increment)
exit
red.dispatch(type: :increment)
exit
red.dispatch(type: :increment)
